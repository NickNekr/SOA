version: '3'
services:
  auth:
    depends_on:
      - auth_service_db
    build: ./Auth
    restart: always
    ports:
      - "${AUTH_PORT:-8000}:${AUTH_PORT:-8000}"
    stop_signal: sigint
    command:
      - sh
      - -c
      - |
        poetry run python ./src/run.py
    networks:
      - mynetwork
    
  tasks:
    depends_on:
      - auth
      - tasks_service_db
    build: ./TasksService
    restart: always
    ports:
      - "${TASKS_PORT:-8001}:${TASKS_PORT:-8001}"
    stop_signal: sigint
    command:
      - sh
      - -c
      - |
        PYTHONPATH=./src/grpc_tasks poetry run python ./src/run.py
    networks:
      - mynetwork
    

  auth_service_db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: auth_service
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - mynetwork
    volumes:
      - ./postgres_data_auth:/var/lib/postgresql/data
    
  tasks_service_db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: tasks_service
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - mynetwork
    volumes:
      - ./postgres_data_tasks:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    depends_on:
      - auth_service_db
    networks:
      - mynetwork

networks:
  mynetwork:
